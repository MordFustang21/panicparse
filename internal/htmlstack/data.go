// Code generated by regen.go. DO NOT EDIT.

package htmlstack

import (
	"html/template"
)

const indexHTML = "<!DOCTYPE html>\n{{- /* Accepts a Call */ -}}\n{{- /*\nTODO(maruel): Use custom local godoc server.\nTODO(maruel): Find a way to link to remote source in a generic way via\npkg.go.dev.\n*/ -}}\n{{- define \"SrcHostURL\" -}}\n{{- if .IsStdlib -}}https://golang.org/{{.RelSrcPath}}#L{{.Line}}{{- else -}}file:///{{.SrcPath}}{{- end -}}\n{{- end -}}\n{{- /* Accepts a Call */ -}}\n{{- define \"PkgHostURL\" -}}\n{{- if .IsStdlib -}}https://golang.org/pkg/{{- else -}}https://pkg.go.dev/{{- end -}}\n{{- end -}}\n{{- /* Accepts a Args */ -}}\n{{- define \"RenderArgs\" -}}\n{{- $l := len .Values -}}\n{{- $last := minus $l 1 -}}\n{{- $elided := .Elided -}}\n{{- range $i, $e := .Values -}}\n{{- if ne $e.Name \"\" -}}\n{{- $e.Name -}}\n{{- else -}}\n{{- printf \"0x%08x\" $e.Value -}}\n{{- end -}}\n{{- $isNotLast := ne $i $last -}}\n{{- if or $elided $isNotLast -}}, {{end -}}\n{{- end -}}\n{{- if $elided}}...{{end}}\n{{- end -}}\n{{- /* Accepts a Call */ -}}\n{{- define \"RenderCall\" -}}\n{{- /* TODO(maruel): Add link when possible or full path */ -}}\n{{- /* TODO(maruel): Align horizontally SrcList when used in the stack. */ -}}\n{{- /*\n<span class=\"call\"><a href=\"{{template \"SrcHostURL\" .}}\">{{.SrcName}}:{{.Line}}</a> <span class=\"{{funcClass .}}\">\n<a href=\"{{template \"PkgHostURL\" .}}{{.Func.PkgName}}{{if .Func.IsExported}}#{{symbol .Func}}{{end}}\">{{.Func.PkgName}}.{{.Func.Name}}</a></span>({{template \"RenderArgs\" .Args}})</span>\n*/ -}}\n<span class=\"call\">{{.SrcName}}:{{.Line}} <span class=\"{{funcClass .}}\">{{.Func.PkgName}}.{{.Func.Name}}</span>({{template \"RenderArgs\" .Args}})</span>\n{{- if isDebug -}}\n<br>SrcPath: {{.SrcPath}}\n<br>LocalSrcPath: {{.LocalSrcPath}}\n<br>Func: {{.Func.Raw}}\n<br>IsStdlib: {{.IsStdlib}}\n{{- end -}}\n{{- end -}}\n{{- /* Accepts a Stack */ -}}\n{{- define \"RenderCalls\" -}}\n<ol>\n{{- range .Calls -}}\n<li>{{template \"RenderCall\" .}}</li>\n{{- end -}}\n{{- if .Elided}}<li>(...)</li>{{end -}}\n</ol>\n{{- end -}}\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<title>PanicParse</title>\n<link rel=\"shortcut icon\" type=\"image/png\" href=\"data:image/png;base64,{{.Favicon}}\"/>\n<style>\n{{- /* Minimal CSS reset */ -}}\n* {\nfont-family: inherit;\nfont-size: 1em;\nmargin: 0;\npadding: 0;\n}\nhtml {\nbox-sizing: border-box;\nfont-size: 62.5%;\n}\n*, *:before, *:after {\nbox-sizing: inherit;\n}\nh1 {\nfont-size: 1.5em;\nmargin-bottom: 0.2em;\nmargin-top: 0.5em;\n}\nh2 {\nfont-size: 1.2em;\nmargin-bottom: 0.2em;\nmargin-top: 0.3em;\n}\nbody {\nfont-size: 1.6em;\nmargin: 2px;\n}\nli {\nmargin-left: 2.5em;\n}\na {\ncolor: inherit;\ntext-decoration: inherit;\n}\nol, ul {\nmargin-bottom: 0.5em;\nmargin-top: 0.5em;\n}\np {\nmargin-bottom: 2em;\n}\n{{- /* Highlights */ -}}\n.FuncStdLibExported {\ncolor: #00B000;\n}\n.FuncStdLib {\ncolor: #006000;\n}\n.FuncMain {\ncolor: #808000;\n}\n.FuncOtherExported {\ncolor: #C00000;\n}\n.FuncOther {\ncolor: #800000;\n}\n.RoutineFirst {\n}\n.Routine {\n}\n.call {\nfont-family: monospace;\n}\n</style>\n<div id=\"content\">\n{{- range $i, $e := .Buckets -}}\n<h1>Routine {{if .First}}(Panicking){{else}}#{{$i}}{{end}}</h1>\n<span class=\"{{routineClass $e}}\">{{len $e.IDs}}: <span class=\"state\">{{$e.State}}</span>\n{{- if $e.SleepMax -}}\n{{- if ne $e.SleepMin $e.SleepMax}} <span class=\"sleep\">[{{$e.SleepMin}}~{{$e.SleepMax}} minutes]</span>\n{{- else}} <span class=\"sleep\">[{{$e.SleepMax}} minutes]</span>\n{{- end -}}\n{{- end -}}\n{{if $e.Locked}} <span class=\"locked\">[locked]</span>\n{{- end -}}\n{{- /* TODO(maruel): Add link when possible or full path */ -}}\n{{- if $e.CreatedBy.SrcPath}} <span class=\"created\">[Created by {{template \"RenderCall\" $e.CreatedBy}}]</span>\n{{- end -}}\n{{template \"RenderCalls\" $e.Signature.Stack}}\n{{- end -}}\n</div>\n<p>\n<div id=\"legend\">\nCreated on {{.Now.String}}:\n<ul>\n<li>{{.Version}}</li>\n<li>GOROOT: {{.GOROOT}}</li>\n<li>GOPATH: {{.GOPATH}}</li>\n<li>GOMAXPROCS: {{.GOMAXPROCS}}</li>\n{{- if .NeedsEnv -}}\n<li>To see all goroutines, visit <a\nhref=https://github.com/maruel/panicparse#gotraceback>github.com/maruel/panicparse</a></li>\n{{- end -}}\n</ul>\n</div>\n"

// favicon is the bomb emoji U+1F4A3 in Noto Emoji as a 128x128 base64 encoded
// PNG.
//
// See README.md for license and how to retrieve it.
const favicon template.HTML = "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"
